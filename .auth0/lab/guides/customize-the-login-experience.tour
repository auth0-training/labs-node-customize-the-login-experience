{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "1: Customize the login experience",
  "steps": [
    {
      "file": "",
      "line": 1,
      "description": "## What you'll learn\n\n* Customize the branding of your Universal Login using the New Universal Login Experience\n* Use JavaScript to modify the Classic Universal Login experience\n* Explore additional Classic Universal Login templates\n* Customize the branding of your Universal Login using the Management API\n* Customize Sign-Up page with additional user fields"
    },
    {
      "file": "",
      "line": 1,
      "title": "Customize branding using the New Login Experience",
      "description": "## Customize the branding on the login page using New experience\n\n1. #### Open your Auth0 Dashboard. \n    **IMPORTANT:** Ensure you're working in your _dev-_ tenant.\n\n1. #### Remind yourself what the current login experience looks like by clicking the profile image in the upper right hand corner and selecting _Getting Started_ > _Try it out_. \n    The login page is displayed with the default color scheme and the Auth0 logo.  \n    ![View the current login experience](https://cdn.auth0.com/website/a0fun/v2/login-1.gif)   \n\n1. #### Change the logo and colors for the login form:\n\n    1. #### In the Auth0 dashboard, navigate to _Branding_ > _Universal Login_ in the left-hand navigation.  \n\n    1. #### Set these values, then click the _Save_ button.\n        * Company Logo: [https://openmoji.org/data/color/svg/1F984.svg](https://openmoji.org/data/color/svg/1F984.svg)\n        * Primary Color: `#9933ff`\n        * Page Background Color: `#92d3f5`   \n\n1. #### See the changes:\n\n    1. #### Return to _Getting Started_, and click _Try it out_. The login page is displayed with the new color scheme and logo. \n        Note that this may take a few moments to take effect.  \n\n        ![view the login experience](https://cdn.auth0.com/website/a0fun/v2/login-4.gif)   \n\n    1. #### In your browser, view the login page source:\n\n        ```\n        Chrome: Control+U / Option+Command+U  \n        Firefox: Control+U / Command+U  \n        Safari: Option+Command+U  \n        ```  \n\n    1. #### Scroll through the page source. \n        Note that this page does not load any JavaScript libraries: Everything you see in the New Universal Login experience is generated on the server.  \n\nNext, we'll explore the Classic Universal Login experience, which is built on top of Auth0's Javascript libraries.",
      "selection": {
        "start": {
          "line": 37,
          "character": 49
        },
        "end": {
          "line": 37,
          "character": 68
        }
      }
    },
    {
      "file": "",
      "line": 1,
      "title": "Explore the Classic Login Experience",
      "description": "## Explore the Classic Login Experience\n\nWhile Auth0's New Universal Login is recommended, Classic Universal Login currently offers a few features that are not available in New Universal Login. All current and future Universal Login development work goes into the New Universal Login only. Visit the [Docs](https://auth0.com/docs/authenticate/login/auth0-universal-login/new-universal-login-vs-classic-universal-login) to learn more.\n\n1. #### Switch to the Classic Universal Login experience:\n    1. #### In the Dashboard, Click _Branding_ > _Universal Login_ in the left-hand navigation.  \n\n    1. #### Scroll down and click _Advanced Options_.\n\n    1. #### If it is not already selected, select the _Classic_ login experience.\n\n    1. #### Scroll to the bottom of the page and click the _Save Changes_ button.\n\n    1. #### Scroll back to the top of the page and click the _Login_ tab.\n\n\n1. #### Set the  default template:\n    1. #### Set the _Customize Login Page_ toggle to the _on_ position (If it is not already) \n    1. #### Select _Lock_ from the _Default Templates_ dropdown menu. You are able to edit the HTML code in the editor on this page.\n        Note that selecting the default template resets all code changes.\n\n    ![set the default template](https://cdn.auth0.com/website/a0fun/v2/login-6.gif)   \n\n1. #### Examine the theme code:\n    1. #### Scroll down in the editor to the theme code:  \n\n        ```jsx\n        theme: {\n        //logo: 'YOUR LOGO HERE',\n            primaryColor: colors.primary ? colors.primary : 'green'\n            },\n        ```\n\n        Currently, the Classic Experience login script does not load your new logo, but it will use the primary color you set in the previous section.  \n    \n    1. #### Scroll down to locate the colors.page_background code:\n        Youâ€™ll see where the background color is used if it has been previously set on the main page.  \n\n        ```js\n        if(colors.page_background) {\n        var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                    colors.page_background +\n                    ' }';\n        ```\n\n    1. #### Scroll back up the page to just above the editor, and click _Preview._ \n        The Preview page is displayed. Take a look down the page to see the preview of your Classic Experience login.  \n\n        Note that the script uses the colors you set in the New Experience, but uses a default logo.  \n\n    ![preview the classic experience](https://cdn.auth0.com/website/a0fun/v2/login-7.gif)   "
    },
    {
      "file": ".auth0/lab/guides/classic-login-default-template.html",
      "description": "## Edit the Classic Login Page Default Template with Your Logo\n\n> Even though you can edit the Default Template code directly within the editor in the dashboard, notice that we have opened a copy of the same code here in VSCode for convenience. Once we are done editing, we will paste this code into the editor in the dashboard to view our changes.\n\n1. #### Let's add our logo by replacing the commented line with a path to our logo:\n\n```jsx\nlogo: 'https://openmoji.org/data/color/svg/1F984.svg',\n```\n\n2. #### Click [here to save](command:workbench.action.files.save) the file locally.\n\n3. #### Click into the `classic-login-default-template.html` file that is open here. Select All (Mac: `CMD+A`, Windows: `CTRL+A`) of the contents. Copy (Mac: `CMD+C`, Windows: `CTRL+C`) the selection.\n\n4. #### Return to the Customize Login Page you have open in your browser and replace the contents of the HTML code editor. You can do this by deleting the existing contents and then pasting (Mac: `CMD+V`, Windows: `CTRL+V`) the contents of your clipboard to the editor.\n\n5. #### Click _Save Changes_\n\n5. #### Go to the _Preview_ tab.  \n    You should be able to see the new logo. If you do not see the changes take effect, you may have to navigate to: Branding > Universal Login > Login tab > Preview tab. \n\\\n6. #### Now, navigate to _Getting Started_, and click _Try it out_. \n        The Classic Experience login page is displayed.  \n\n7. #### In your browser, view the login page source:\n\n    ```\n    Chrome: Control+U / Option+Command+U  \n    Firefox: Control+U / Command+U  \n    Safari: Option+Command+U  \n    ```\n        \n8. #### Scroll down the page source to the `<body>` section. \n    You should see a `<script>` tag containing embedded JavaScript. Scroll through the embedded JavaScript and it should look familiar.\n    \n    It is what you changed in the dashboard using the Login text editor, and you should see the theme: block containing the link to your new logo.\n\n    ![view the code in the browser](https://cdn.auth0.com/website/a0fun/v2/login-9.gif)  ",
      "line": 58,
      "selection": {
        "start": {
          "line": 58,
          "character": 5
        },
        "end": {
          "line": 58,
          "character": 45
        }
      }
    },
    {
      "file": "",
      "line": 1,
      "title": "Explore the Classic Login templates",
      "description": "## Explore the Classic Login templates\n\n1. #### Choose a different login template:\n    1. #### In the Dashboard, go to the _Branding_ > _Universal Login_ > _Login_ tab  \n\n    1. #### Click the _Default Templates_ dropdown. A list of template scripts is displayed, which contains:\n        * Lock\n        * Lock (passwordless)\n        * Custom Login Form  \n\n    1. #### Scroll back to the drop-down menu and choose _Custom Login Form._  \n\n        The new template is loaded in the editor. \n        \n    1. #### Click _Save Changes_.\n\n    ![select the custom login form](https://cdn.auth0.com/website/a0fun/v2/login-10.gif)  \n\n1. #### Try it out at _Getting Started > Try it out_.  \n\n    The Custom Login Form template gives you a basic login form and does not use the logo and colors saved on the Universal Login Settings tab. This template is a starting point for your own branded login user experience.   \n\n    **Note:** You may need to [force refresh](https://refreshyourcache.com/en/cache/) in order to see the updated page.\n\n    ![preview the login experience](https://cdn.auth0.com/website/a0fun/v2/login-11.gif)  \n\n1. #### Return to the _Branding_ > _Universal Login_ > _Login_ tab and _disable_ your customizations by clicking on the _Customize Login Page_ toggle switch.  \n\n    Nice work -- The default experience has been reinstated.\n\n    ![reinstate the default login experience](https://cdn.auth0.com/website/a0fun/v2/login-12.gif)  "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Use the Management API to view branding settings",
      "description": "## Use the Management API to View Branding Settings\n\nThere are other branding operations you can perform with the Auth0 Management API. Let's investigate these options using Auth0's API Explorer. First we'll set up the API Explorer and then we will request our current branding settings from the Management API.\n\n1. #### Set up Auth0 Management API Explorer.\n    1. #### In the Dashboard, go to the _Applications_ > _APIs_. In your list of APIs, Select on _Auth0 Management API_. The Settings page for the _Auth0 Management API_ is displayed.  \n\n    1. #### Select on the _API Explorer_ tab.  \n\n    1. #### Select the _Copy Token_ icon on the right of your Access Token.  \n\n    1. #### Select the _Documentation_ link at the top of your Dashboard, and select Management API from the dropdown list. The Management API explorer is opened in a new browser tab. This page allows us to try out all the endpoints exposed by the Management API.\n\n    1. #### Select _Set API Token_ in the top right corner of the page. In the popup, _paste_ your token into the _API Token_ field, and select _Set Token_.  \n\n        The Management API Explorer now shows the _Domain, API Token,_ and _Allowed Scopes_ for your tenant.  \n\n    **IMPORTANT: You will stay on this page for the next step!**\n\n1. #### Get branding settings:\n    1. #### On the same page you just set your API token on, scroll down until you see the left-hand navigation menu. Locate _Branding_ (You may want to use _CTRL+F_ or _CMD+F_ to search the page for _Branding_) Select Branding to reveal its available methods.\n\n    1. #### Select the _Get branding settings_ link to view the documentation for this endpoint. It is a `GET` request to `/api/v2/branding`.\n\n    1. #### Review the documentation for the _Get branding settings_ endpoint.\n\n        On the right-hand side, under _Response Sample_ you see the schema for the JSON response you will receive upon successful completion.   \n\n    1. #### Select _Test Endpoint_. The result of the GET `/api/v2/branding` call is displayed and if you get a 200 response code, and the body contains the current branding configuration that will look similar to this:  \n\n        ```json\n            {\n                \"colors\": {\n                    \"page_background\": \"#92d3f5\",\n                    \"primary\": \"#9933ff\"\n                },\n                \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\"\n            }\n        ```        \n\n1. #### Update the branding settings:\n\n    1. #### Select _Update branding settings_ in the left-hand navigation and review the documentation for the PATCH request to `/api/v2/branding`.  \n\n    1. #### Copy these new settings and paste them into the _body_ field:  \n\n        ```json\n          {\n              \"colors\": {\n                  \"primary\": \"#B499C8\",\n                  \"page_background\": \"#E9AD56\"\n              },\n              \"logo_url\": \"https://openmoji.org/data/color/svg/1F490.svg\",\n              \"font\": {\n                  \"url\": \"https://fonts.gstatic.com/s/tangerine/v12/Iurd6Y5j_oScZZow4VO5srNZi5FNym499g.woff2\"\n              }\n          }\n        ```\n\n    1. #### Select _Test Endpoint_. \n        The result of the PATCH `/api/v2/branding` request is displayed and if you get a 200 response code, the body will look similar to this:  \n\n        ```json\n            {\n                \"colors\": {\n                    \"page_background\": \"#E9AD56\",\n                    \"primary\": \"#B499C8\"\n                },\n                \"font\": {\n                    \"url\": \"https://fonts.gstatic.com/s/tangerine/v12/Iurd6Y5j_oScZZow4VO5srNZi5FNym499g.woff2\"\n                },\n                \"logo_url\": \"https://openmoji.org/data/color/svg/1F490.svg\"\n            }\n        ```\n\n    1. #### To test the branding changes, switch back to the Auth0 dashboard. \n    \n    1. #### Select the _Try It Out_ link (select the profile image in the upper right hand corner > Getting started > Try it out). \n        New colors, icon, and font are applied to your login screen.  \n\n1. #### Revert to the previous branding:\n    1. #### To revert, use the PATCH `/api/v2/branding` request to _Update branding settings_.  \n        Copy these new settings in the Management API window and paste them into the body field:  \n\n        ```json\n            {\n                \"colors\": {\n                    \"primary\": \"#9933ff\",\n                    \"page_background\": \"#92d3f5\"\n                },\n                \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\",\n                \"font\": null\n            }\n        ```\n\n    1. #### Select _Test Endpoint_. The result of the `PATCH /api/v2/branding` request is displayed and if you get a 200 response code, the body will look similar to this:  \n\n        ```json\n            {\n                \"colors\": {\n                    \"page_background\": \"#92d3f5\",\n                    \"primary\": \"#ea5a47\"\n                },\n                \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\"\n            }\n        ```\n\n    1. #### Test the change with the _Try it out_ link. \n        The colors and icon have reverted to the previous design, and the font now uses the Auth0 default.",
      "selection": {
        "start": {
          "line": 94,
          "character": 1
        },
        "end": {
          "line": 98,
          "character": 76
        }
      }
    },
    {
      "title": "Use the Management API to update branding settings",
      "description": "## Use the Management API to Update Branding Settings\n\nNow let's use the API Explorer to update our tenant's branding settings through a request to the Management API.\n\n\n1. #### Select the _Update branding settings_ link left-hand navigation to view the documentation for this endpoint. \nIt is a `PATCH` request to `/api/v2/branding`.  \n\n1. #### Copy these new settings and paste them into the _body_ field:  \n\n    ```json\n        {\n            \"colors\": {\n                \"primary\": \"#B499C8\",\n                \"page_background\": \"#E9AD56\"\n            },\n            \"logo_url\": \"https://openmoji.org/data/color/svg/1F490.svg\",\n            \"font\": {\n                \"url\": \"https://fonts.gstatic.com/s/tangerine/v12/Iurd6Y5j_oScZZow4VO5srNZi5FNym499g.woff2\"\n            }\n        }\n    ```\n\n1. #### Select _Test Endpoint_. \n    The result of the PATCH `/api/v2/branding` request is displayed and if you get a 200 response code, the body will look similar to this:  \n\n    ```json\n        {\n            \"colors\": {\n                \"page_background\": \"#E9AD56\",\n                \"primary\": \"#B499C8\"\n            },\n            \"font\": {\n                \"url\": \"https://fonts.gstatic.com/s/tangerine/v12/Iurd6Y5j_oScZZow4VO5srNZi5FNym499g.woff2\"\n            },\n            \"logo_url\": \"https://openmoji.org/data/color/svg/1F490.svg\"\n        }\n    ```\n",
      "selection": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 71,
          "character": 103
        }
      }
    },
    {
      "title": "Test the new branding settings applied by the Managment API",
      "description": "## Test the New Branding Settings Applied by the Managment API\n\nLet's test out the branding changes!\n\n1. ####  Switch back to the browser tab where you are logged in to your tenant's Auth0 Dashboard. \n\n1. #### Select your profile image in the upper right hand corner.\n\n1. #### Select _Getting Started_.\n\n1. #### In the _Try your Login box_ section of this page, select the _Try it out_ link.\n    You should see the new theme colors, icon, and font are applied to your login page.  \n\n1. #### Revert to the previous branding:\n    1. #### To revert, use the PATCH `/api/v2/branding` request to _Update branding settings_.  \n        Copy these new settings in the Management API window and paste them into the body field:  \n\n        ```json\n            {\n                \"colors\": {\n                    \"primary\": \"#9933ff\",\n                    \"page_background\": \"#92d3f5\"\n                },\n                \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\",\n                \"font\": null\n            }\n        ```\n\n    1. #### Select _Test Endpoint_. The result of the `PATCH /api/v2/branding` request is displayed and if you get a 200 response code, the body will look similar to this:  \n\n        ```json\n            {\n                \"colors\": {\n                    \"page_background\": \"#92d3f5\",\n                    \"primary\": \"#ea5a47\"\n                },\n                \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\"\n            }\n        ```\n\n    1. #### Go back to your Auth0 Dashboard browser tab to test the change with the _Try it out_ link. \n        The colors and icon have reverted to the previous design, and the font now uses the Auth0 default."
    },
    {
      "file": "",
      "line": 1,
      "title": "Customize the Sign-Up page with additional user fields",
      "description": "## Customize the Sign-Up page with additional user fields\n\nIn the next few steps, you'll learn how to add custom fields to the _Sign Up_ dialog in _Universal Login_. This is useful for collecting data from users. To get started:\n\n1.  #### Ensure that you're in your _dev-_ tenant.  \n\n1. #### In the left-hand navigation, click _Branding_ > _Universal Login_.  \n\n    You should see the _Universal Login Settings_ displayed. Currently, the _Classic_ option will be selected in the _Universal Login Experience_ section of the _Settings_ tab.  \n\n1. #### Select the Advanced Options section.\n\n1. #### Select the _Login_ tab.  \n\n    You will see the _Login Page_ customization settings. By default customizations are disabled and the standard dialogs are used.   \n\n1. #### Toggle on _Customize Login Page_.\n\n1. #### Select _Lock_ from the _Default Templates_ drop-down menu.  \n\n     The *HTML* editor will become available and you can easily make changes right in the Dashboard.  \n"
    },
    {
      "file": ".auth0/lab/guides/classic-login-default-template.html",
      "description": "## Customize the Sign-Up page with additional user fields: Lock SDK\n\n> Even though you can view and edit the Default Template code directly within the editor in the dashboard, notice that we have opened a copy of the same code here in VSCode for convenience so we can highlight certain portions of the code relevant to our learning.\n\n#### Take a look at the highlighted section in the code above:\n\nThis bit of JavaScript creates an instance of [Auth0Lock](https://auth0.com/docs/libraries/lock), which is an embeddable login form that can be configured in conjunction with Universal Login. The first two parameters are configuration values for your `clientId` and `auth0Domain` (tenant) and are passed in at runtime. A third parameter is a configuration object. For the purposes of this exercise, we will be making edits to this configuration.  \n\n   ",
      "selection": {
        "start": {
          "line": 39,
          "character": 1
        },
        "end": {
          "line": 45,
          "character": 76
        }
      }
    },
    {
      "file": ".auth0/lab/guides/classic-login-default-template.html",
      "description": "## Customize the Sign-Up page with additional user fields: Edit Configuration\n \n > Even though you can edit the Default Template code directly within the editor in the dashboard, notice that we have opened a copy of the same code here in VSCode for convenience. Once we are done editing, we will paste this code into the editor in the dashboard to view our changes.\n \n 1. #### Insert the following code into the configuration object.  This adds a new property to the Lock configuration called `additionalSignUpFields`. It is an array that contains a JSON object for each field you want to add to the Sign-Up form. \n\n```js\n    additionalSignUpFields: [\n    { name: 'band', placeholder: 'What band are you in?' },\n    { name: 'instrument', placeholder: 'What instrument do you play?' }\n    ],\n    \n``` \n> When you completed the **Working with the User Profile** lab, recall that you added both a _band_ and _instrument_ property to the _user\\_metadata_ object after the user has created their account. In this step, you have just added those two fields to the Sign Up form. You have also added placeholder values to give a hint to the registering user of what to add to these fields.\n\n2. #### Click [here to save](command:workbench.action.files.save) your changes locally.\n\n    It should look like this:  \n\n    ![](https://cdn.auth0.com/website/training/example/A0FUN-M05-L01/img-2.png)  \n\n3. #### Click into the `classic-login-default-template.html` file that is open here. Select All (Mac: `CMD+A`, Windows: `CTRL+A`) of the contents. Copy (Mac: `CMD+C`, Windows: `CTRL+C`) the selection.\n\n4. #### Return to the Customize Login Page you have open in your browser and replace the contents of the HTML code editor. You can do this by deleting the existing contents and then pasting (Mac: `CMD+V`, Windows: `CTRL+V`) the contents of your clipboard to the editor.\n\n5. #### Click _Save Changes_\n\n    ![save the changes](https://cdn.auth0.com/website/a0fun/v2/login-20.gif)   \n\n1. #### Test it on the _Lab: Web App_:\n    1. #### Click [here](command:auth0.lab.localConfigure) to set the Web App environment configurations (This creates the `.env` file under `src/web-app`). \n    1. #### Click [here](command:workbench.action.debug.start) to run the Web App in debug mode. \n        It may take a few minutes for the app to deploy.\n    1. #### Once the app has deployed, click the \"Open in Browser\" button on the VS Code popup. Or, click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your web browser.\n    1. #### On your Web App's landing page, click _Login_.  \n    1. #### Then, click the _Sign Up_ tab at the top of the dialog.  \n        You should see the two additional fields added to the bottom of the Sign Up form.  \n    1. #### Fill in the form to create a new user account in your tenant.  \n        *You will need to supply a different email address from the one used to create your first user account. In this case, it is OK to use a made-up email address you do not have access to.*\n    1. #### Click the _Sign Up_ button at the bottom of the dialog.   \n\n    ![test it out](https://cdn.auth0.com/website/a0fun/v2/login-21.gif)   \n\n1. #### See the results in the Auth0 dashboard:\n    1. #### Return to the Auth0 Dashboard.  \n    1. #### Navigate to the _Users_ list view located under the _User Management_ section of the left-hand navigation menu.  \n    1. #### Locate your new user and click the entry to view the userâ€™s details.  \n    1. #### Scroll down to the _Metadata_ section on the _Details_ tab.  \n\n        You should see the values for _band_ and _instrument_ properties populated with values from the Sign Up form in the _user\\_metadata_ section. Of course, these values are not available to you directly in the ID token returned by OIDC authentication. (Note that Auth0 Actions can be used to add custom claims to ID tokens.)  \n\n        There is a way to store values that can be immediately accessed in an OIDC based ID token. As mentioned previously, OIDC has a set of [standard claims](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) defined in the specification. Letâ€™s use them to capture the user's first and last name at registration.  \n    \n    ![view the results in the dashboard](https://cdn.auth0.com/website/a0fun/v2/login-22.gif)   \n",
      "line": 40,
      "selection": {
        "start": {
          "line": 40,
          "character": 1
        },
        "end": {
          "line": 40,
          "character": 1
        }
      }
    },
    {
      "file": ".auth0/lab/guides/classic-login-default-template.html",
      "description": "## Customize the Sign-Up page: Add New Fields\n\n> Even though you can edit the Default Template code directly within the editor in the dashboard, notice that we have opened a copy of the same code here in VSCode for convenience. Once we are done editing, we will paste this code into the editor in the dashboard to view our changes.\n\nLet's add two new fields named _given\\_name_ and _family\\_name_. Note these are the exact names specified by the OIDC standard claims.  \n\n\n1. #### Update the `additionalSignUpFields` array to contain these two new fields.  \n\n```js\n    { name: 'given_name', placeholder: 'First Name', storage: 'root' },\n    { name: 'family_name', placeholder: 'Last Name', storage: 'root' },\n \n```\n\n\n2. #### Click [here to save](command:workbench.action.files.save) your changes locally.\n\n    It should look like this:  \n![](https://cdn.auth0.com/website/training/example/A0FUN-M05-L01/img-1.png) \n\n3. #### Click into the `classic-login-default-template.html` file that is open here. Select All (Mac: `CMD+A`, Windows: `CTRL+A`) of the contents. Copy (Mac: `CMD+C`, Windows: `CTRL+C`) the selection.\n\n4. #### Return to the Customize Login Page you have open in your browser and replace the contents of the HTML code editor. You can do this by deleting the existing contents and then pasting (Mac: `CMD+V`, Windows: `CTRL+V`) the contents of your clipboard to the editor.\n\n5. #### Click _Save Changes_\n\n    ![save the changes](https://cdn.auth0.com/website/a0fun/v2/login-23.gif)  \n\n\n1. #### Try it out:\n    1. #### If it isn't open already, click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open your _Lab: Web App_ in a new window.  \n    1. #### Ensure that you've logged out, then click the _Login_ link.\n    1. #### Click the _Sign Up_ tab at the top of the dialog.  \n        You should see the two additional fields added to the bottom of the Sign Up form.  \n    1. #### Fill in the form to create a new user account in your tenant.  \n        You will need to supply another new email address, different from the one used to create your first user account. It is OK to use a made-up email address you do not have access to.  \n    1. #### Click the _Sign Up_ button at the bottom of the dialog.  \n\n    ![give it a try](https://cdn.auth0.com/website/a0fun/v2/login-24.gif)   \n\n1. #### See the results:\n    1. #### Return to the Auth0 dashboard.  \n    1. #### Navigate to the _Users_ list view located under the _User Management_ section of the left-hand navigation menu.  \n    1. #### Locate your new user and click the entry to view the userâ€™s details.  \n    1. #### Scroll down to the _Identity Provider Attributes_ section on the _Details_ tab.  \n\n        You should see the values for _family\\_name_ and _given\\_name_ properties populated with values from the Sign Up form in this section. These values can be immediately accessed in an OIDC based id token as they are [standard claims](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) defined in the OIDC specification.  \n\n    ![view the results](https://cdn.auth0.com/website/a0fun/v2/login-25.gif)   \n\n    #### Congratulations -- Youâ€™ve successfully added fields to the login form!",
      "line": 41,
      "selection": {
        "start": {
          "line": 41,
          "character": 1
        },
        "end": {
          "line": 41,
          "character": 1
        }
      }
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Recap",
      "description": "\n**In this lab you:**\n\n*   Customized the branding of your Universal Login using the Dashboard.\n*   Worked with the Classic Login Script JavaScript to define your branding.\n*   Explored additional Classic Login script templates to review additional login customization opportunities.\n*   Retrieved the current branding configuration using the Management API explorer.\n*   Customized the branding of your Universal Login using the Management API explorer.\n*   Customized the Sign-Up page to capture additional user fields."
    }
  ]
}